2023-03-11  Harald Anlauf  <anlauf@gmx.de>

	PR fortran/106945
	* trans-expr.cc (gfc_copy_class_to_class): Convert element counts in
	bounds check to common type for comparison.

2023-03-10  Harald Anlauf  <anlauf@gmx.de>

	PR fortran/104332
	* resolve.cc (resolve_symbol): Avoid NULL pointer dereference while
	checking a symbol with the BIND(C) attribute.

2023-03-05  Harald Anlauf  <anlauf@gmx.de>
	    Tobias Burnus   <tobias@codesourcery.com>

	PR fortran/106856
	* class.cc (gfc_build_class_symbol): Handle update of attributes of
	existing class container.
	(gfc_find_derived_vtab): Fix several memory leaks.
	(find_intrinsic_vtab): Ditto.
	* decl.cc (attr_decl1): Manage update of symbol attributes from
	CLASS attributes.
	* primary.cc (gfc_variable_attr): OPTIONAL shall not be taken or
	updated from the class container.
	* symbol.cc (free_old_symbol): Adjust management of symbol versions
	to not prematurely free array specs while working on the declation
	of CLASS variables.

2023-03-01  Tobias Burnus  <tobias@codesourcery.com>

	PR middle-end/108546
	* trans-openmp.cc (gfc_trans_omp_clauses): Fix mapping of
	type(C_ptr) variables.

2023-02-27  Harald Anlauf  <anlauf@gmx.de>

	PR fortran/108937
	* trans-intrinsic.cc (gfc_conv_intrinsic_ibits): Handle corner case
	LEN argument of IBITS equal to BITSIZE(I).

2023-02-25  Mikael Morin  <mikael@gcc.gnu.org>

	PR fortran/108923
	* intrinsic.cc (get_intrinsic_dummy_arg,
	set_intrinsic_dummy_arg): Rename the former to the latter.
	Remove the return value, add a reference to the lhs as argument,
	and do the pointer assignment inside the function.  Don't do
	it if the pointer is already non-NULL.
	(sort_actual): Update caller.

2023-02-25  Harald Anlauf  <anlauf@gmx.de>

	* arith.cc (gfc_real2int): Clear mpfr variable after use.

2023-02-25  Tobias Burnus  <tobias@codesourcery.com>

	PR fortran/108621
	* trans-expr.cc (gfc_conv_gfc_desc_to_cfi_desc): Skip setting of
	bounds of CFI desc for 'pointer,intent(out)'.

2023-02-24  Rimvydas Jasinskas  <rimvydas.jas@gmail.com>

	* trans-decl.cc (gfc_finish_var_decl): Apply attribute.
	(generate_local_decl): Add diagnostic for dummy and local variables.

2023-02-24  Mikael Morin  <mikael@gcc.gnu.org>

	PR fortran/108923
	* expr.cc (gfc_free_actual_arglist): Free associated_dummy
	memory.
	(gfc_copy_actual_arglist): Make a copy of the associated_dummy
	field if it is set in the original element.

2023-02-24  Harald Anlauf  <anlauf@gmx.de>

	PR fortran/108924
	* frontend-passes.cc (do_subscript): Clear used gmp variable.

2023-02-23  Arsen Arsenović  <arsen@aarsen.me>

	* invoke.texi: Reorder index entries around @items.

2023-02-23  Arsen Arsenović  <arsen@aarsen.me>

	* invoke.texi: Reorder @opindex commands to precede @items they
	relate to.

2023-02-22  Harald Anlauf  <anlauf@gmx.de>

	PR fortran/96024
	* resolve.cc (resolve_component): The type of a CHARACTER length
	expression must be INTEGER.

2023-02-21  Harald Anlauf  <anlauf@gmx.de>

	PR fortran/96025
	* parse.cc (check_function_result_typed): Improve type check of
	specification expression for character length and return status.
	(parse_spec): Use status from above.
	* resolve.cc (resolve_fntype): Prevent use of invalid specification
	expression for character length.

2023-02-16  Patrick Palka  <ppalka@redhat.com>

	* gfortran.h: Mechanically drop static from static inline
	functions via s/^static inline/inline/g.

2023-02-15  Steve Kargl  <kargl@gcc.gnu.org>

	PR fortran/103608
	* frontend-passes.cc (do_intent): Catch NULL pointer dereference on
	reference to invalid formal argument.

2023-02-15  Steve Kargl  <kargl@gcc.gnu.org>

	PR fortran/104554
	* resolve.cc (check_assumed_size_reference): Avoid NULL pointer
	dereference.

2023-02-15  Tobias Burnus  <tobias@codesourcery.com>

	PR fortran/108512
	* openmp.cc (gfc_resolve_omp_parallel_blocks): Handle combined 'loop'
	directives.
	(gfc_resolve_do_iterator): Set a source location for added
	'private'-clause arguments.
	* resolve.cc (gfc_resolve_code): Call gfc_resolve_omp_do_blocks
	also for EXEC_OMP_LOOP and gfc_resolve_omp_parallel_blocks for
	combined directives with loop + '{masked,master} taskloop (simd)'.

2023-02-13  Harald Anlauf  <anlauf@gmx.de>

	PR fortran/103475
	* primary.cc (gfc_expr_attr): Avoid NULL pointer dereference for
	invalid use of CLASS variable.

2023-02-13  Rimvydas Jasinskas  <rimvydas.jas@gmail.com>

	* decl.cc: Add EXT_ATTR_NOINLINE, EXT_ATTR_NORETURN, EXT_ATTR_WEAK.
	* gfortran.h (ext_attr_id_t): Ditto.
	* gfortran.texi (GCC$ ATTRIBUTES): Document them.
	* trans-decl.cc (build_function_decl): Apply them.

2023-02-09  Harald Anlauf  <anlauf@gmx.de>
	    Steven G. Kargl  <kargl@gcc.gnu.org>

	PR fortran/69636
	PR fortran/103779
	* intrinsic.cc (gfc_convert_chartype): Recover on invalid character
	kind in conversion instead of generating an internal error.

2023-02-09  Tobias Burnus  <tobias@codesourcery.com>

	PR fortran/107424
	* trans-openmp.cc (struct dovar_init_d): Add 'sym' and
	'non_unit_incr' members.
	(gfc_nonrect_loop_expr): New.
	(gfc_trans_omp_do): Call it; use normal loop bounds
	for unit stride - and only create local loop var.

2023-02-09  Tobias Burnus  <tobias@codesourcery.com>

	* parse.cc (decode_omp_directive): Really ignore 'assumes' with
	-fopenmp-simd.

2023-02-08  Steve Kargl  <kargl@gcc.gnu.org>

	PR fortran/103259
	* resolve.cc (resolve_common_vars): Avoid NULL pointer dereference
	when a symbol's location is not set.

2023-02-07  Harald Anlauf  <anlauf@gmx.de>

	PR fortran/95107
	* trans-decl.cc (gfc_finish_var_decl): With -fno-automatic, do not
	make ASSOCIATE variables TREE_STATIC.

2023-02-05  Harald Anlauf  <anlauf@gmx.de>

	PR fortran/108592
	* arith.cc (gfc_arith_divide): Emit integer division truncation
	warnings using gfc_warning instead of gfc_warning_now to prevent
	redundant messages.

2023-02-03  Jakub Jelinek  <jakub@redhat.com>

	PR fortran/108451
	* trans-decl.cc (gfc_trans_use_stmts): Call clear_slot before
	doing continue.

2023-02-01  Harald Anlauf  <anlauf@gmx.de>

	PR fortran/108609
	* expr.cc (find_array_section): Add check to prevent interpreting an
	mpz non-integer constant as an integer.

2023-02-01  Tobias Burnus  <tobias@codesourcery.com>

	* openmp.cc (resolve_omp_clauses): Check also for
	power of two.

2023-01-29  Mikael Morin  <mikael@gcc.gnu.org>

	PR fortran/108450
	* check.cc (gfc_check_minloc_maxloc): Explicitly set argument name.
	(gfc_check_findloc): Ditto.

2023-01-29  Jerry DeLisle  <jvdelisle@gcc.gnu.org>

	PR fortran/103506
	* parse.cc (parse_module): Remove use of a bool error value
	that prevented proper setting of the namespace pointer.

2023-01-28  Harald Anlauf  <anlauf@gmx.de>
	    Steven G. Kargl  <kargl@gcc.gnu.org>

	PR fortran/108527
	* resolve.cc (compare_bound_int): Expression to compare must be of
	type INTEGER.
	(compare_bound_mpz_t): Likewise.
	(check_dimension): Fix comment on checks applied to array section
	and clean up associated logic.

2023-01-28  Harald Anlauf  <anlauf@gmx.de>

	PR fortran/108453
	* match.cc (gfc_match_common): A USE associated name shall not appear
	in a COMMON block (F2018:C8121).

2023-01-27  Tobias Burnus  <tobias@codesourcery.com>

	PR fortran/108558
	* trans-openmp.cc (gfc_split_omp_clauses): Handle has_device_addr.

2023-01-26  Harald Anlauf  <anlauf@gmx.de>

	PR fortran/108544
	* resolve.cc (check_host_association): Extend host association check
	so that it is not restricted to functions.  Also prevent NULL pointer
	dereference.

2023-01-25  Steve Kargl  <kargl@gcc.gnu.org>

	PR fortran/108528
	* array.cc (compare_bounds): Return false instead of generating an
	internal error on an invalid argument type.

2023-01-24  Harald Anlauf  <anlauf@gmx.de>

	PR fortran/108529
	* simplify.cc (simplify_transformation): Do not try to simplify
	transformational intrinsic when the ARRAY argument has a NULL shape.

2023-01-23  Harald Anlauf  <anlauf@gmx.de>

	PR fortran/108502
	* dependency.cc (gfc_check_dependency): Prevent NULL pointer
	dereference while recursively checking expressions.

2023-01-23  Harald Anlauf  <anlauf@gmx.de>

	PR fortran/108501
	* interface.cc (get_expr_storage_size): Check array subscript triplets
	that we actually have integer values before trying to extract with
	mpz_get_si.

2023-01-23  Harald Anlauf  <anlauf@gmx.de>

	PR fortran/108420
	* iresolve.cc (check_charlen_present): Preserve character length if
	there is no array constructor.

2023-01-21  Jerry DeLisle  <jvdelisle@gcc.gnu.org>

	PR fortran/102595
	* data.cc (gfc_assign_data_value): Remove check for PARAMETER in DATA.
	* primary.cc (match_variable): Add check for PARAMETER in DATA.

2023-01-19  Harald Anlauf  <anlauf@gmx.de>

	PR fortran/108434
	* expr.cc (class_allocatable): Prevent NULL pointer dereference
	or invalid read.
	(class_pointer): Likewise.

2023-01-17  Harald Anlauf  <anlauf@gmx.de>

	PR fortran/108421
	* interface.cc (get_expr_storage_size): Check that we actually have
	an integer value before trying to extract it with mpz_get_si.

2023-01-12  Tobias Burnus  <tobias@codesourcery.com>

	PR fortran/107706
	* openmp.cc (gfc_resolve_omp_assumptions): Reject nonscalars.

2023-01-11  Jakub Jelinek  <jakub@redhat.com>

	PR fortran/108349
	* f95-lang.cc (gfc_init_builtin_function): Fix up function types
	for BUILT_IN_REALLOC and BUILT_IN_SINCOS{F,,L}.  Formatting fixes.

2023-01-10  Harald Anlauf  <anlauf@gmx.de>

	PR fortran/97345
	* frontend-passes.cc (do_subscript): Clear used gmp variables.

2023-01-02  Jakub Jelinek  <jakub@redhat.com>

	* gfortranspec.cc (lang_specific_driver): Update copyright notice
	dates.
	* gfc-internals.texi: Bump @copying's copyright year.
	* gfortran.texi: Ditto.
	* intrinsic.texi: Ditto.
	* invoke.texi: Ditto.


Copyright (C) 2023 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.
